*****************************************************************************
TODO
*****************************************************************************
DONE delegates

coercion

Lazy + bare ? mmh reader writer? tests

Events-KompatibilitÃ¤t / different class

inheritance
     
     + sign

nested types

traits
     
DONE alternate naming / different class

DONE ro inside instance writeable => geht oder geht nicht in moose? => NEIN
*****************************************************************************
DONE: is             =>      'ro', 'rw', 'bare'

DONE:isa             =>      MooTools type => default, builder, writer, accessor, constructor
     OBJECT TYPES => instanceOf Checks

     'element' - (string) If object is a DOM element node.
     'textnode' - (string) If object is a DOM text node.
     'whitespace' - (string) If object is a DOM whitespace node.
     'arguments' - (string) If object is an arguments object.
     'array' - (string) If object is an array.
     'object' - (string) If object is an object.
     'string' - (string) If object is a string.
     'number' - (string) If object is a number.
     'date' - (string) If object is a date.
     'boolean' - (string) If object is a boolean.
     'function' - (string) If object is a function.
     'regexp' - (string) If object is a regular expression.
     'class' - (string) If object is a Class (created with new Class, or the extend of another class).
     'collection' - (string) If object is a native htmlelements collection, such as childNodes, getElementsByTagName, etc.
     'window' - (string) If object is the window object.
     'document' - (string) If object is the document object.
     'event' - (string) If object is an event.
     'undefined'
     'null'

DONE required        => $bool   die if attribute was not set via constructor, default, builder

DONE lazy                 => $bool    must have default or builder
 test lazy => clear => get
     kriegt man da das default/builder wieder?   => JA => WORKS test11
     bei moose?                                  => JA => WORKS test11
     mit und ohne setting via constructor        => JA => WORKS test11
DONE test typecheck
     trigger

DONE lazy_build      => $bool    same as
                                 builder   => '_build_size',
                                 clearer   => 'clear_size',
                                 predicate => 'has_size',

DONE default         =>

DONE documentation   => string   NOT USED ANYWAY, can be accessed through object.$attribute.<accessorname>.documentation

DONE reader          => string

DONE writer          => string

DONE predicate       => string   checks defined-ness

DONE builder         => string   methodname, return value for attribute

DONE clearer         => string   set to undefined

DONE trigger         => string   called after accessor was set, $size, $old_size, $was_unset_before

/* TODO: Doku
    // Class Types
    Element      true
    Elements     true
    TextNode     WRAPPER     TextNode  => String + String => TextNode (Number, Date)
    Array        true
    Object       true
    String       true
    Number       true
    Date         true
    Boolean      true
    Function     true
    Regexp       true
    Class        true
    Window       true
    Document     true
    Event        true

    // Types
    collection   false       Collection => Elements,   Collection => Array
    arguments    false       Arguments  => Elements,   Arguments  => Array
    
    whitespace   false       special case    /
    
    undefined    false       special case
    null         false       special case
     
    Hierarchy
    ---------
    
    Object
        Element
        Array
            Elements
        String
        Number
        Date
        Boolean
        Function
            Class
        RegExp
        Window
        Document
        Event
*/

